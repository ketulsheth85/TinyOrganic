# Generated by Django 3.2 on 2021-12-12 17:54

from decimal import Decimal
import dirtyfields.dirtyfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
        ('discounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('modified_at', models.DateTimeField(auto_created=True, auto_now=True, db_index=True, verbose_name='last modified at')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Minimum Price', 'Minimum Price'), ('Product', 'Product'), ('Number of Orders', 'Number of Orders'), ('Customer Set', 'Customer Set'), ('Nth-time Subscribers', 'Nth-time Subscribers'), ('Redemption Limit per Customer', 'Redemption Limit per Customer')], max_length=128)),
                ('minimum_cart_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('nth_time_subscriber', models.SmallIntegerField(blank=True, null=True)),
                ('number_of_orders', models.IntegerField(default=1)),
                ('redemption_limit_per_customer', models.PositiveSmallIntegerField(default=1)),
                ('is_active', models.BooleanField(default=False)),
                ('apply_to_products', models.ManyToManyField(blank=True, to='products.Product')),
                ('discount', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rules', to='discounts.discount')),
            ],
            options={
                'abstract': False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRule',
            fields=[
                ('modified_at', models.DateTimeField(auto_created=True, blank=True, db_index=True, editable=False, verbose_name='last modified at')),
                ('created_at', models.DateTimeField(auto_created=True, blank=True, db_index=True, editable=False)),
                ('id', models.UUIDField(auto_created=True, db_index=True, default=uuid.uuid4, editable=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Minimum Price', 'Minimum Price'), ('Product', 'Product'), ('Number of Orders', 'Number of Orders'), ('Customer Set', 'Customer Set'), ('Nth-time Subscribers', 'Nth-time Subscribers'), ('Redemption Limit per Customer', 'Redemption Limit per Customer')], max_length=128)),
                ('minimum_cart_amount', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('nth_time_subscriber', models.SmallIntegerField(blank=True, null=True)),
                ('number_of_orders', models.IntegerField(default=1)),
                ('redemption_limit_per_customer', models.PositiveSmallIntegerField(default=1)),
                ('is_active', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('discount', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='discounts.discount')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical rule',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
