# Generated by Django 3.2 on 2021-12-12 04:30

import apps.customers.models.libs
import dirtyfields.dirtyfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fsm
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('modified_at', models.DateTimeField(auto_created=True, auto_now=True, db_index=True, verbose_name='last modified at')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('payment_provider_customer_id', models.TextField(blank=True, null=True, unique=True)),
                ('external_customer_id', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.TextField()),
                ('last_name', models.TextField(blank=True)),
                ('phone_number', models.TextField(blank=True)),
                ('guardian_type', models.TextField(choices=[('parent', 'parent'), ('parent_and_expecting', 'parent_and_expecting'), ('expecting', 'expecting'), ('caregiver', 'caregiver'), ('other', 'other')], default='parent')),
                ('status', models.TextField(choices=[('lead', 'lead'), ('plan_selection', 'plan_selection'), ('checkout', 'checkout'), ('subscriber', 'subscriber'), ('deactivated', 'deactivated')], default='lead')),
                ('has_active_subscriptions', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=(apps.customers.models.libs.PersonMixin, dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CustomerChild',
            fields=[
                ('modified_at', models.DateTimeField(auto_created=True, auto_now=True, db_index=True, verbose_name='last modified at')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.TextField()),
                ('last_name', models.TextField(blank=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('sex', models.TextField(blank=True, choices=[('male', 'male'), ('female', 'female')], null=True)),
                ('allergy_severity', models.TextField(choices=[('none', 'none'), ('mild', 'mild'), ('severe', 'severe')], default='none')),
            ],
            options={
                'verbose_name_plural': 'Customer Children',
                'abstract': False,
            },
            bases=(apps.customers.models.libs.PersonMixin, dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCustomerSubscription',
            fields=[
                ('modified_at', models.DateTimeField(auto_created=True, blank=True, db_index=True, editable=False, verbose_name='last modified at')),
                ('created_at', models.DateTimeField(auto_created=True, blank=True, db_index=True, editable=False)),
                ('id', models.UUIDField(auto_created=True, db_index=True, default=uuid.uuid4, editable=False, verbose_name='ID')),
                ('number_of_servings', models.PositiveSmallIntegerField(default=12)),
                ('frequency', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (4, 4)], default=2)),
                ('next_order_changes_enabled_date', models.DateField(blank=True, null=True)),
                ('next_order_charge_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('activated_at', models.DateTimeField(blank=True, null=True)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True)),
                ('status', django_fsm.FSMField(choices=[('active', 'active'), ('inactive', 'inactive')], default='inactive', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('customer_child', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='customers.customerchild')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical customer subscription',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCustomerChild',
            fields=[
                ('modified_at', models.DateTimeField(auto_created=True, blank=True, db_index=True, editable=False, verbose_name='last modified at')),
                ('created_at', models.DateTimeField(auto_created=True, blank=True, db_index=True, editable=False)),
                ('id', models.UUIDField(auto_created=True, db_index=True, default=uuid.uuid4, editable=False, verbose_name='ID')),
                ('first_name', models.TextField()),
                ('last_name', models.TextField(blank=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('sex', models.TextField(blank=True, choices=[('male', 'male'), ('female', 'female')], null=True)),
                ('allergy_severity', models.TextField(choices=[('none', 'none'), ('mild', 'mild'), ('severe', 'severe')], default='none')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical customer child',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCustomer',
            fields=[
                ('modified_at', models.DateTimeField(auto_created=True, blank=True, db_index=True, editable=False, verbose_name='last modified at')),
                ('created_at', models.DateTimeField(auto_created=True, blank=True, db_index=True, editable=False)),
                ('id', models.UUIDField(auto_created=True, db_index=True, default=uuid.uuid4, editable=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('payment_provider_customer_id', models.TextField(blank=True, db_index=True, null=True)),
                ('external_customer_id', models.CharField(blank=True, db_index=True, max_length=256, null=True)),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('first_name', models.TextField()),
                ('last_name', models.TextField(blank=True)),
                ('phone_number', models.TextField(blank=True)),
                ('guardian_type', models.TextField(choices=[('parent', 'parent'), ('parent_and_expecting', 'parent_and_expecting'), ('expecting', 'expecting'), ('caregiver', 'caregiver'), ('other', 'other')], default='parent')),
                ('status', models.TextField(choices=[('lead', 'lead'), ('plan_selection', 'plan_selection'), ('checkout', 'checkout'), ('subscriber', 'subscriber'), ('deactivated', 'deactivated')], default='lead')),
                ('has_active_subscriptions', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical customer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='CustomerSubscription',
            fields=[
                ('modified_at', models.DateTimeField(auto_created=True, auto_now=True, db_index=True, verbose_name='last modified at')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, db_index=True)),
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_servings', models.PositiveSmallIntegerField(default=12)),
                ('frequency', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (4, 4)], default=2)),
                ('next_order_changes_enabled_date', models.DateField(blank=True, null=True)),
                ('next_order_charge_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('activated_at', models.DateTimeField(blank=True, null=True)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True)),
                ('status', django_fsm.FSMField(choices=[('active', 'active'), ('inactive', 'inactive')], default='inactive', max_length=50)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
                ('customer_child', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='subscription', to='customers.customerchild')),
            ],
            options={
                'abstract': False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
    ]
