# Generated by Django 3.2 on 2022-03-01 15:26
from decimal import Decimal

from django.db import migrations


def _backfill_subtotal_and_discount_amounts(apps, _):
    Order = apps.get_model('orders', 'Order')

    for order in Order.objects.filter(
        payment_status='paid',
        subtotal_amount=Decimal('0'),
    ):
        _subtotal_amount = sum([
            line_item.quantity * line_item.product_variant.price
            for line_item in order.line_items.filter()
        ])
        _number_of_servings = sum([
            line_item.quantity
            for line_item in order.line_items.filter()
        ])
        _discount_amount = Decimal('0')

        if _number_of_servings >= 24:
            _discount_amount += Decimal('20')

        order.subtotal_amount = _subtotal_amount

        if order.applied_discount:
            discount = order.applied_discount.discount
            if discount.discount_type == 'percentage':
                _discount_amount += ((order.subtotal_amount - _discount_amount) * discount.amount) / 100
            else:
                _discount_amount += discount.amount

        order.discount_amount_total = _discount_amount
        order.save()


class Migration(migrations.Migration):
    dependencies = [
        ('orders', '0010_auto_20220301_1525'),
    ]

    operations = [
        migrations.RunPython(_backfill_subtotal_and_discount_amounts),
    ]
