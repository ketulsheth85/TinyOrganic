ARG PYTHON_VERSION=3.9

FROM python:${PYTHON_VERSION}-slim as core
ARG APP_DIR=/app
ARG BACKEND_APP_PORT=8000

ENV APP_DIR=${APP_DIR} \
    PIP_NO_CACHE_DIR=1 \
    PIP_COMPILE=0 \
    PYTHONDOONTWRITEBYTECODE=1 \
    PYTHONPATH=$PYTHONPATH:$APP_DIR \
    PYTHONUNBUFFERED=1

RUN mkdir -p /install

FROM core AS builder
WORKDIR /install

COPY requirements/* /install/

RUN apt-get update && \
    apt-get install -y \
            build-essential \
            gcc \
            postgresql \
            procps \
            curl libjpeg-dev zlib1g && \
    pip install -r /install/00-install-pip.txt \
                       -r /install/01-needs-to-compile.txt \
                       -r /install/02-core.txt && \
    pip install Django==3.2 gunicorn==20.0.4 supervisor==4.2.2 whitenoise==5.3 newrelic==7.6.0.173

FROM builder as development-build
ARG DJANGO_STATIC_ROOT=/static
WORKDIR $APP_DIR
ENV PYTHONDONTWRITEBYTECODE=1
COPY --from=builder /install /usr/local/lib/python${PYTHON_VERSION}/site-packages
COPY --from=builder /install /app/.local

COPY requirements/03-development.txt .

COPY docker-entrypoint.sh /usr/local/bin
COPY health-check.sh health-check.sh
COPY install-watchman.sh $APP_DIR

COPY ./config/launch-gunicorn-dev.sh ./config/
COPY ./config/gunicorn.py ./config/
COPY ./config/newrelic.ini ./config/
COPY ./config/supervisord-dev.conf /etc/supervisord.conf
COPY ./config/ipython.py /root/.ipython/profile_default/ipython_config.py

RUN mkdir -p $APP_DIR/logs && touch $APP_DIR/logs/django-info.log && \
    touch $APP_DIR/logs/django-errors.log && \
    touch $APP_DIR/logs/django-requests.log && \
    apt install -y git wget zip && pip install -r 03-development.txt && \
    ./install-watchman.sh

HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 CMD [ "health-check.sh" ]

ENTRYPOINT [ "docker-entrypoint.sh" ]

EXPOSE $BACKEND_APP_PORT

FROM builder as development-static
ARG DJANGO_STATIC_ROOT=/static
ENV PYTHONDONTWRITEBYTECODE=1
COPY --from=builder /install /usr/local/lib/python${PYTHON_VERSION}/site-packages
COPY --from=builder /install /app/.local

COPY docker-entrypoint.sh /usr/local/bin
COPY health-check.sh health-check.sh
COPY install-watchman.sh $APP_DIR

WORKDIR $APP_DIR

COPY . .

ENTRYPOINT [ "docker-entrypoint.sh" ]

EXPOSE $BACKEND_APP_PORT

FROM builder as development-celery
ARG DJANGO_STATIC_ROOT=/static
ENV PYTHONDONTWRITEBYTECODE=1


WORKDIR $APP_DIR
COPY --from=builder /install /usr/local/lib/python${PYTHON_VERSION}/site-packages
COPY --from=builder /install /app/.local

COPY celery/docker-entrypoint.sh /usr/local/bin
COPY celery/health-check.sh /usr/local/bin

HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 CMD [ "health-check.sh" ]
ENTRYPOINT ["docker-entrypoint.sh"]

CMD ["worker"]


FROM development-celery as development-celerybeat
CMD ["beat"]

FROM development-celery as development-celery-flower
ENV CELERY_FLOWER_PORT=5566
CMD ["flower"]
EXPOSE $CELERY_FLOWER_PORT
